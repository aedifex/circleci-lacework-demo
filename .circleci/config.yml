version: 2.1
orbs:
  lacework: lacework/lacework@1.3.0

workflows:
  with-lw-scanner:
   jobs:
      - code-lint
      - code-cov
      - build-image:
          requires:
            - code-cov
            - code-lint
      - hold-for-approval:
          type: approval
          requires:
            - build-image
      - scan-vuln-image-with-lw-scanner:
          requires:
            - hold-for-approval
      # - scan-community-image-pretty-output
      # - build-and-scan-python-image
      # - scan-packer-ami
  with-lacework-cli:
    jobs:
      - cli-scan

jobs:
  code-cov:
    machine: true
    steps:
    - checkout
    - run: echo "Executing vuln scan"
    - run: sleep 49

  code-lint:
    machine: true
    steps:
    - checkout
    - run: echo "Executing vuln scan"
    - run: sleep 53

  build-image:
    machine: true
    steps:
    - checkout
    - run: echo "Executing vuln scan"

  scan-vuln-image-with-lw-scanner:
    machine: true
    steps:
    - checkout
    - run: echo "Executing vuln scan"
    - run:
        # In lieu if having an install script proper, the following block
        # pulls in the lw-scanner binary, un-tars it, and makes it executable.
        name: Install lw-scanner
        command: |
          wget https://github.com/lacework/lacework-vulnerability-scanner/releases/download/v0.22.0/lw-scanner-linux-amd64.tar.gz -O lw-scanner.tar.gz
          # This places the binary in a folder /bin/lw-scanner
          tar xvf lw-scanner.tar.gz
          # Make this executable
          chmod +x ./bin/lw-scanner
          # check scanner
          ./bin/lw-scanner > /dev/null 2>&1
    - run:
        name: Fetch image
        command: docker pull vulnerables/web-dvwa
    - run:
        name: Execute scan
        command: |
          # Need to move this
          ./bin/lw-scanner evaluate vulnerables/web-dvwa latest -d=/home/circleci/project/ --scan-library-packages --html --save --tags ci_provider=circleci,user=aedifex,build_stage=dev,component=node_frontend
    - run:
        name: Create directory to persist artifacts
        command: |
          mkdir  lacework-artifacts/

          if [ `ls -1 *.html 2>/dev/null | wc -l ` -gt 0 ]; then
            mv *.html lacework-artifacts/
          fi
    - store_artifacts:
        path: lacework-artifacts

  scan-community-image-pretty-output:
    machine: true
    steps:
    - run:
        # In lieu if having an install script proper, the following block
        # pulls in the lw-scanner binary, un-tars it, and makes it executable.
        name: Install lw-scanner
        command: |
          wget https://github.com/lacework/lacework-vulnerability-scanner/releases/download/v0.2.0/lw-scanner-linux-amd64.tar.gz -O lw-scanner.tar.gz
          # This places the binary in a folder /bin/lw-scanner
          tar xvf lw-scanner.tar.gz
          # Make this executable
          chmod +x ./bin/lw-scanner
          # check scanner
          ./bin/lw-scanner > /dev/null 2>&1
    - run:
        name: Execute scan
        command: |
          # Need to move this
          ./bin/lw-scanner image evaluate chriscircleci/vuln_django 7f7305bea884b63578c28d4513a916e2247ec152 -d=/home/circleci/project/ --scan-library-packages --html --pretty

  build-and-scan-vuln-image:
    machine: true
    steps:
    - checkout
    - run:
        name: Build Docker Image
        command: |
            docker build -t aedifex_hack:lacework-test -t component:clojure . --label "component=clojure"
    - run:
        name: Install lw-scanner
        command: |
            chmod +x install_lw_scanner.sh
            ./install_lw_scanner.sh
    - run:
        name: Execute Scan
        command: ./bin/lw-scanner evaluate aedifex_hack lacework-test -d=/home/circleci/project/ --scan-library-packages --html --save --tags ci_provider=circleci,user=aedifex,component=base_image
    - run:
        name: Create directory to persist artifacts
        command: |
          mkdir  lacework-artifacts/

          if [ `ls -1 *.html 2>/dev/null | wc -l ` -gt 0 ]; then
            mv *.html lacework-artifacts/
          fi
    - store_artifacts:
        path: lacework-artifacts

  cli-scan:
    executor: lacework/default
    steps:
      - checkout
      # - lacework/ctr-vuln-scan:
      #     registry: "index.docker.io"
      #     repository: chriscircleci/vuln_django
      #     tag: 7f7305bea884b63578c28d4513a916e2247ec152
      #     fail_on_fixable: false
      #     html: true
      - run:
          name: Configure LW cli-scan
          command: |
            lacework Configure
      - run:
          name: Persist html vuln report as build artifact
          command: |
            mkdir  lacework-artifacts/

            if [ `ls -1 *.html 2>/dev/null | wc -l ` -gt 0 ]; then
                mv *.html lacework-artifacts/
            fi

      - store_artifacts:
          path: lacework-artifacts

  build-and-scan-python-image:
    machine: true
    steps:
    - checkout
    - run:
        name: Hello!
        command: |
            echo "testing!"
    - run:
        name: Install lw-scanner
        command: |
            wget https://github.com/lacework/lacework-vulnerability-scanner/releases/download/v0.2.0/lw-scanner-linux-amd64.tar.gz -O lw-scanner.tar.gz
            # This places the binary in a folder /bin/lw-scanner
            tar xvf lw-scanner.tar.gz
            # Make this executable
            chmod +x ./bin/lw-scanner
            # check scanner
            ./bin/lw-scanner > /dev/null 2>&1
    - run:
        name: Pull Python Image
        command: |
            docker pull node:10
    - run:
        name: Execute Scan
        command: |
            ./bin/lw-scanner evaluate node 10  --scan-library-packages --save --tags component=cruise-node

  scan-packer-ami:
    machine: true
    steps:
    - checkout
    - run:
        name: Build AMI
        command: |
          echo "Building AMI!"